name: Deploy To Stage

on:
  push:
    branches:
      - stage

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Node.js Image
        working-directory: ./node-server 
        run: |
          docker build -t mohammaddabbas/architext-node:${{ github.sha }} .
          docker push mohammaddabbas/architext-node:${{ github.sha }}

      - name: Build and Push Flask Image
        working-directory: ./flask-server  
        run: |
          docker build -t mohammaddabbas/architext-flask:${{ github.sha }} .
          docker push mohammaddabbas/architext-flask:${{ github.sha }}

      - name: Build and Push React Image
        working-directory: ./docs-web 
        run: |
          docker build -t mohammaddabbas/architext-react:${{ github.sha }} .
          docker push mohammaddabbas/architext-react:${{ github.sha }}

  deploy:
    needs: build-push
    runs-on: [self-hosted, staging]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Deep Clean Docker System
        run: |
          docker system prune -a -f --volumes
          docker volume prune -f
          docker image prune -a -f

      - name: Pull Latest Images
        run: |
          docker pull mohammaddabbas/architext-node:${{ github.sha }}
          docker pull mohammaddabbas/architext-flask:${{ github.sha }}
          docker pull mohammaddabbas/architext-react:${{ github.sha }}

      - name: Stop and Remove Old Containers
        run: docker compose -f docker-compose-delivery.yml down

      - name: Start Services
        env:
          TAG: ${{ github.sha }}
          OPENAI_API_KEY: ${{ secrets.PROD_OPENAI_API_KEY }}
          GITHUB_CLIENT_ID: ${{ secrets.STAGE_GITHUB_CLIENT_ID }}
          GITHUB_CLIENT_SECRET: ${{ secrets.STAGE_GITHUB_CLIENT_SECRET }}
          GITHUB_CALLBACK_URL: ${{ secrets.STAGE_GITHUB_CALLBACK }}
          DATABASE_URL: postgresql://myuser:secret@postgres:5432/architext_db
        run: |
          TAG=${{ github.sha }} docker compose -f docker-compose-delivery.yml up -d